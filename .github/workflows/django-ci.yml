name: Django Application

## Define activity which triggers the CI.
on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

  # schedule:
  #   - cron:

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: ${{ secrets.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRESQL_DB_NAME }}
        
        ports:
          - 5432:5432
          
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
        

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Install dependencies
        run: python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Link with flake8
        run: pip install flake8
          flake8
      
      - name: Coverage report
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DB_USER: ${{ secrets.POSTGRESQL_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
          DB_NAME: ${{ secrets.POSTGRESQL_DB_NAME }}
          DB_HOST: ${{ secrets.POSTGRESQL_HOST }}
          DB_ENGINE: ${{ secrets.DB_ENGINE }}
        run: coverage run manage.py test
          && coverage report

      - name: Django Testing
        env:
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DB_USER: ${{ secrets.POSTGRESQL_USER }}
          DB_PASSWORD: ${{ secrets.POSTGRESQL_PASSWORD }}
          DB_NAME: ${{ secrets.POSTGRESQL_DB_NAME }}
          DB_HOST: ${{ secrets.POSTGRESQL_HOST }}
          DB_ENGINE: ${{ secrets.DB_ENGINE }}
        run: python3 manage.py test
